module 'main' ['Nil'/0, 'Cons'/2, 'length'/1, 'take1'/3, 'take'/2,
               'con'/2, 'create'/1, 'reverse'/1, 'list2'/0, 'res'/0, 'res2'/0,
               'res30'/0]
    attributes []
'Nil'/0 =
    fun() -> {}
'Cons'/2 =
    fun(_0, _1) -> {{'value0', _0}, {'value1', _1}}
'length'/1 =
    fun(_0) ->
        case <_0> of
            <{}> when 'true' ->
                0
            <{{'value0', _100}, {'value1', _0}}> when 'true' ->
                call 'erlang':'+' (1, apply 'length'/1(_0))
        end
'take1'/3 =
    fun(_0, _1, _2) ->
        case <_0, _1, _2> of
            <0, _1, _2> when 'true' ->
                _1
            <_3, _4, {}> when 'true' ->
                _4
            <_5, _6, {{'value0', _7}, {'value1', _8}}> when 'true' ->
                apply 'take1'/3(call 'erlang':'-' (_5, 1), apply 'Cons'/2(_7, _6),
                                _8)
        end
'take'/2 =
    fun(_5, _6) -> apply 'take1'/3(_5, apply 'Nil'/0(), _6)
'con'/2 =
    fun(_0, _1) ->
        case <_0, _1> of
            <{}, _9> when 'true' ->
                _9
            <{{'value0', _10}, {'value1', _11}}, _12> when 'true' ->
                apply 'Cons'/2(_10, apply 'con'/2(_11, _12))
        end
'create'/1 =
    fun(_0) ->
        case <_0> of
            <0> when 'true' ->
                apply 'Nil'/0()
            <_13> when 'true' ->
                apply 'Cons'/2(_13, apply 'create'/1(call 'erlang':'-' (_13, 1)))
        end
'reverse'/1 =
    fun(_0) ->
        case <_0> of
            <{}> when 'true' ->
                apply 'Nil'/0()
            <{{'value0', _14}, {'value1', _15}}> when 'true' ->
                apply 'con'/2(apply 'reverse'/1(_15),
                              apply 'Cons'/2(_14, apply 'Nil'/0()))
        end
'list2'/0 =
    fun() -> apply 'create'/1(30)
'res'/0 =
    fun() ->
        apply fun(_5, _6) -> apply 'take1'/3(_5, apply 'Nil'/0(), _6)(3,
                                                                      apply fun() ->
                                                                                apply 'create'/1(30)())
'res2'/0 =
    fun() -> apply 'reverse'/1(apply fun() -> apply 'create'/1(30)())
'res30'/0 =
    fun() -> apply 'reverse'/1(apply 'create'/1(30))
end